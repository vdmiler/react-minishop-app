{"version":3,"sources":["store/slices/basketSlice.js","components/Checkout/Checkout.jsx","components/Header/Header.jsx","components/ModalDetail/ModalDetail.jsx","components/ProductItem/ProductItem.jsx","components/ProductList/ProductList.jsx","store/slices/productDataSlice.js","config.js","store/slices/paginationSlice.js","components/ProductsPagination/ProductsPagination.jsx","store/slices/searchSlice.js","components/SearchField/SearchField.jsx","components/BasketItem/BasketItem.jsx","components/BasketList/BasketList.jsx","components/Basket/Basket.jsx","components/BasketNotice/BasketNotice.jsx","components/Shop/Shop.jsx","components/Thanks/Thanks.jsx","App.js","store/index.js","index.js"],"names":["basketSlice","createSlice","name","initialState","orders","totalAmount","isBasketShow","isNoticeShow","reducers","setOrders","state","action","payload","setTotalAmount","setBasketShow","setNoticeShow","actions","Checkout","dispatch","useDispatch","navigate","useNavigate","checkoutValidationSchema","yup","min","max","required","surname","email","checkoutInitialValues","Typography","variant","component","sx","mb","formik","useFormik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","console","log","localStorage","removeItem","replace","className","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","List","map","order","ListItem","ListItemIcon","ListItemText","displayName","quantity","clothingSize","mainId","Button","color","type","CheckoutForm","onClick","mt","Header","location","useLocation","AppBar","position","Container","fixed","Toolbar","flexGrow","pathname","IconButton","edge","Badge","badgeContent","ModalDetail","imageUrl","displayDescription","finalPrice","isActiveModal","setActiveModal","setClothingSize","useSelector","basket","useState","errorField","setErrorField","Modal","open","onClose","Card","top","left","transform","maxWidth","width","bgcolor","border","boxShadow","p","CardMedia","alt","height","image","CardContent","gutterBottom","fontSize","style","FormControl","InputLabel","Select","labelId","e","target","MenuItem","CardActions","size","ml","mr","display","item","itemIndex","findIndex","orderItem","newItem","newOrder","index","addToBasket","setTimeout","ProductItem","props","granted","price","images","full_background","Grid","xs","md","margin","cursor","ProductList","modifiedProductData","productData","container","spacing","product","textAlign","fetchProductData","createAsyncThunk","a","axios","get","headers","process","response","data","shop","productDataSlice","originProductData","loadingProgress","errorFetch","setOriginProductData","setModifiedProductData","extraReducers","pending","fulfilled","rejected","paginationSlice","currentPage","productsPerPage","setCurrentPage","setProductsPerPage","ProductsPagination","pagination","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","useEffect","totalPages","Math","ceil","length","Pagination","count","page","_","num","justifyContent","searchSlice","searchValue","setSearchValue","SearchField","search","filter","toLowerCase","includes","handleSearch","BasketItem","plusQuantity","minusQuantity","removeFromOrder","flexBasis","flexDirection","flexShrink","Close","BasketList","itemId","el","newQuantity","elem","primary","Divider","fontWeight","Link","to","Basket","Drawer","anchor","BasketNotice","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Shop","LinearProgress","Thanks","App","isInitialMount","useRef","localOrders","parse","getItem","current","setItem","reduce","acc","pt","pb","path","element","store","configureStore","reducer","productDataReducer","basketReducer","paginationReducer","searchReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9948f11.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   totalAmount: 0,\r\n   isBasketShow: false,\r\n   isNoticeShow: false,\r\n}\r\n\r\nconst basketSlice = createSlice({\r\n   name: 'basket',\r\n   initialState,\r\n   reducers: {\r\n      setOrders(state, action) {\r\n         state.orders = action.payload\r\n      },\r\n      setTotalAmount(state, action) {\r\n         state.totalAmount = action.payload\r\n      },\r\n      setBasketShow(state, action) {\r\n         state.isBasketShow = action.payload\r\n      },\r\n      setNoticeShow(state, action) {\r\n         state.isNoticeShow = action.payload\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setOrders, setTotalAmount, setBasketShow, setNoticeShow } = basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;","import React from 'react';\r\nimport './Checkout.scss';\r\nimport * as yup from 'yup';\r\nimport { Button, List, ListItem, ListItemIcon, ListItemText, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\nimport { useFormik } from 'formik';\r\nimport RedeemIcon from '@mui/icons-material/Redeem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst Checkout = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n   const navigate = useNavigate();\r\n   const goBack = () => navigate(-1);\r\n   const goThanks = () => navigate('thanks', { replace: true })\r\n\r\n   const checkoutValidationSchema = yup.object({\r\n      name: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      surname: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      email: yup\r\n         .string()\r\n         .email('Неверный адрес электронной почты\"')\r\n         .required('Обязательное поле'),\r\n   });\r\n\r\n   const checkoutInitialValues = {\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n   }\r\n\r\n   const CheckoutForm = () => {\r\n      const formik = useFormik({\r\n         initialValues: checkoutInitialValues,\r\n         validationSchema: checkoutValidationSchema,\r\n         onSubmit: (values) => {\r\n            alert(JSON.stringify([values, ...orders], null, 2));\r\n            console.log([values, ...orders])\r\n            dispatch(setOrders([]));\r\n            localStorage.removeItem('orders');\r\n            goThanks();\r\n         },\r\n      });\r\n      return (\r\n         <>\r\n            <form className=\"checkout__form\" onSubmit={formik.handleSubmit}>\r\n               <div className=\"checkout__fields\">\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Контактная информация\r\n                  </Typography>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Имя\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"surname\"\r\n                        name=\"surname\"\r\n                        label=\"Фамилия\"\r\n                        value={formik.values.surname}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.surname && Boolean(formik.errors.surname)}\r\n                        helperText={formik.touched.surname && formik.errors.surname}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                     />\r\n                  </div>\r\n               </div>\r\n               <div className=\"checkout__check\">\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Оформление заказа\r\n                  </Typography>\r\n                  <List>\r\n                     {\r\n                        orders.map(order => {\r\n                           return (\r\n                              <ListItem key={order.mainId}>\r\n                                 <ListItemIcon>\r\n                                    <RedeemIcon />\r\n                                 </ListItemIcon>\r\n                                 <ListItemText>\r\n                                    {order.displayName} X {order.quantity} ({order.clothingSize})\r\n                                 </ListItemText>\r\n                              </ListItem>\r\n                           )\r\n                        })\r\n                     }\r\n                     <ListItem>\r\n                        <ListItemText>\r\n                           <strong>Всего: {totalAmount}</strong>\r\n                        </ListItemText>\r\n                     </ListItem>\r\n                  </List>\r\n                  <Button className=\"checkout__btn\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n                     Оформить заказ\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </>\r\n      );\r\n   }\r\n   return (\r\n      <>\r\n         <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 8 }}>\r\n            Оформление заказа\r\n         </Typography>\r\n         {CheckoutForm()}\r\n         <Button\r\n            variant=\"outlined\"\r\n            onClick={goBack}\r\n            sx={{ mt: 8 }}\r\n         >\r\n            Назад\r\n         </Button>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport './Header.scss';\r\nimport { AppBar, Container, Toolbar, Typography, Badge, IconButton } from '@mui/material';\r\nimport ShoppingCart from '@mui/icons-material/ShoppingCart';\r\nimport { useLocation } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\n\r\nconst Header = ({ quantity }) => {\r\n   const location = useLocation();\r\n   const dispatch = useDispatch();\r\n   return (\r\n      <AppBar position=\"fixed\">\r\n         <Container fixed>\r\n            <Toolbar>\r\n               <Typography\r\n                  variant=\"h6\"\r\n                  component=\"span\"\r\n                  sx={{ flexGrow: 1 }}\r\n               >\r\n                  Mini Market\r\n               </Typography>\r\n               {\r\n                  location.pathname === '/' ? (\r\n                     <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={() => dispatch(setBasketShow(true))}\r\n                     >\r\n                        <Badge\r\n                           color=\"secondary\"\r\n                           badgeContent={quantity}\r\n                        >\r\n                           <ShoppingCart />\r\n                        </Badge>\r\n                     </IconButton>\r\n                  ) : null\r\n               }\r\n            </Toolbar>\r\n         </Container>\r\n      </AppBar>\r\n   );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport './ModalDetail.scss';\r\nimport { Modal, Box, FormControl, InputLabel, Select, MenuItem, Typography, Button, Card, CardMedia, CardContent, CardActions } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { setNoticeShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst ModalDetail = ({\r\n   mainId,\r\n   imageUrl,\r\n   displayName,\r\n   displayDescription,\r\n   finalPrice,\r\n   isActiveModal,\r\n   setActiveModal,\r\n   clothingSize,\r\n   setClothingSize\r\n}) => {\r\n   const style = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      maxWidth: 400,\r\n      width: '100%',\r\n      bgcolor: 'background.paper',\r\n      border: '2px solid #000',\r\n      boxShadow: 24,\r\n      p: 4,\r\n   };\r\n   const dispatch = useDispatch();\r\n   const { orders } = useSelector(state => state.basket);\r\n\r\n   const addToBasket = (item) => {\r\n      const itemIndex = orders.findIndex(orderItem => orderItem.mainId === item.mainId)\r\n      if (itemIndex < 0) {\r\n         const newItem = {\r\n            ...item,\r\n            quantity: 1\r\n         }\r\n         dispatch(setOrders([...orders, newItem]))\r\n      } else {\r\n         const newOrder = orders.map((orderItem, index) => {\r\n            if (index === itemIndex) {\r\n               return {\r\n                  ...orderItem,\r\n                  quantity: orderItem.quantity + 1\r\n               }\r\n            } else {\r\n               return orderItem;\r\n            }\r\n         })\r\n         dispatch(setOrders(newOrder))\r\n      }\r\n      dispatch(setNoticeShow(true))\r\n   }\r\n\r\n   const [errorField, setErrorField] = useState(false);\r\n\r\n   const handleSendToBasket = () => {\r\n      if (clothingSize !== '') {\r\n         addToBasket({\r\n            mainId,\r\n            displayName,\r\n            finalPrice,\r\n            clothingSize\r\n         });\r\n         setClothingSize('');\r\n         setTimeout(() => {\r\n            setActiveModal(false)\r\n         }, 1500)\r\n      } else {\r\n         setErrorField(true)\r\n      }\r\n   }\r\n\r\n   const handleChangeSize = e => {\r\n      setClothingSize(e.target.value);\r\n      if (e.target.value !== '') {\r\n         setErrorField(false)\r\n      } else {\r\n         setErrorField(true)\r\n      }\r\n   }\r\n   return (\r\n      <Modal\r\n         open={isActiveModal}\r\n         onClose={() => setActiveModal(false)}\r\n         aria-labelledby={displayName}\r\n         aria-describedby={displayDescription}\r\n      >\r\n         <Card sx={style}>\r\n            <CardMedia\r\n               component=\"img\"\r\n               alt=\"green iguana\"\r\n               height=\"auto\"\r\n               image={imageUrl}\r\n            />\r\n            <CardContent>\r\n               <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                  {displayName}\r\n               </Typography>\r\n               <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {displayDescription}\r\n               </Typography>\r\n               <Typography sx={{ mt: 2, mb: 2, fontSize: '18px' }}>\r\n                  Цена: <span style={{ color: 'red' }}>{finalPrice} грн.</span>\r\n               </Typography>\r\n               <FormControl fullWidth error={errorField ? true : false}>\r\n                  <InputLabel id=\"size-select-label\">Размер:</InputLabel>\r\n                  <Select\r\n                     labelId=\"size-label\"\r\n                     id=\"size-select\"\r\n                     value={clothingSize}\r\n                     label=\"Размер\"\r\n                     onChange={handleChangeSize}\r\n                  >\r\n                     <MenuItem value=\"M\">M</MenuItem>\r\n                     <MenuItem value=\"L\">L</MenuItem>\r\n                     <MenuItem value=\"XL\">XL</MenuItem>\r\n                     <MenuItem value=\"XXL\">XXL</MenuItem>\r\n                  </Select>\r\n               </FormControl>\r\n            </CardContent>\r\n            <CardActions>\r\n               <Button\r\n                  variant=\"outlined\"\r\n                  size=\"medium\"\r\n                  color=\"success\"\r\n                  sx={{\r\n                     mt: 4,\r\n                     ml: 'auto',\r\n                     mr: 'auto',\r\n                     display: 'block'\r\n                  }}\r\n                  onClick={handleSendToBasket}\r\n               >\r\n                  В корзину\r\n               </Button>\r\n            </CardActions>\r\n         </Card>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalDetail;","import React, { useState } from 'react';\r\nimport './ProductItem.scss';\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@mui/material';\r\nimport ModalDetail from '../ModalDetail/ModalDetail';\r\n\r\nconst ProductItem = (props) => {\r\n   const { mainId, granted, displayName, price, displayDescription } = props;\r\n\r\n   const imageUrl = granted[0].images.full_background;\r\n   const finalPrice = price.finalPrice;\r\n\r\n   const [isActiveModal, setActiveModal] = useState(false);\r\n   const [clothingSize, setClothingSize] = useState('');\r\n   return (\r\n      <>\r\n         <Grid item xs={12} md={4}>\r\n            <Card sx={{\r\n               maxWidth: 345,\r\n               height: '100%',\r\n               margin: '0 auto'\r\n            }}\r\n            >\r\n               <CardMedia\r\n                  component=\"img\"\r\n                  height=\"auto\"\r\n                  image={imageUrl}\r\n                  alt=\"green iguana\"\r\n                  sx={{ cursor: 'pointer' }}\r\n                  onClick={() => setActiveModal(true)}\r\n               />\r\n               <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                     {displayName}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" component=\"div\" sx={{ mb: 1, color: '#f44336' }}>\r\n                     {finalPrice} грн.\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                     {displayDescription}\r\n                  </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                  <Button\r\n                     variant=\"outlined\"\r\n                     size=\"medium\"\r\n                     color=\"success\"\r\n                     sx={{ ml: 'auto' }}\r\n                     onClick={() => setActiveModal(true)}\r\n                  >\r\n                     Выбрать\r\n                  </Button>\r\n               </CardActions>\r\n            </Card>\r\n         </Grid>\r\n         <ModalDetail\r\n            mainId={mainId}\r\n            imageUrl={imageUrl}\r\n            displayName={displayName}\r\n            displayDescription={displayDescription}\r\n            finalPrice={finalPrice}\r\n            isActiveModal={isActiveModal}\r\n            setActiveModal={setActiveModal}\r\n            clothingSize={clothingSize}\r\n            setClothingSize={setClothingSize}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport './ProductList.scss';\r\nimport ProductItem from '../ProductItem/ProductItem';\r\nimport { Grid } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductList = () => {\r\n   const { modifiedProductData } = useSelector(state => state.productData)\r\n   return (\r\n      <>\r\n         {\r\n            modifiedProductData ? (\r\n               <Grid container spacing={2}>\r\n                  {\r\n                     modifiedProductData.map(product => {\r\n                        return (\r\n                           <ProductItem key={product.mainId} {...product} />\r\n                        )\r\n                     })\r\n                  }\r\n               </Grid>\r\n            ) : (\r\n               <h3 style={{ textAlign: 'center' }}>Nothing here</h3>\r\n            )\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ProductList;","import axios from \"axios\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API_KEY, API_URL } from \"../../config\";\r\n\r\nexport const fetchProductData = createAsyncThunk(\r\n   'products/fetchProductData',\r\n   async function () {\r\n      try {\r\n         const response = await axios.get(API_URL, {\r\n            headers: {\r\n               'Authorization': API_KEY\r\n            }\r\n         })\r\n         const productData = await response.data.shop\r\n         return productData;\r\n      } catch (err) {\r\n         console.error(err.response);\r\n      }\r\n   }\r\n)\r\n\r\nconst initialState = {\r\n   originProductData: [],\r\n   modifiedProductData: [],\r\n   loadingProgress: false,\r\n   errorFetch: null,\r\n}\r\n\r\nconst productDataSlice = createSlice({\r\n   name: 'productData',\r\n   initialState,\r\n   reducers: {\r\n      setOriginProductData(state, action) {\r\n         state.originProductData = action.payload\r\n      },\r\n      setModifiedProductData(state, action) {\r\n         state.modifiedProductData = action.payload\r\n      }\r\n   },\r\n   extraReducers: {\r\n      [fetchProductData.pending]: (state, action) => {\r\n         state.loadingProgress = true;\r\n      },\r\n      [fetchProductData.fulfilled]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.originProductData = action.payload;\r\n         state.modifiedProductData = action.payload;\r\n      },\r\n      [fetchProductData.rejected]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.errorFetch = action.payload;\r\n      },\r\n   }\r\n});\r\n\r\nexport const { setOriginProductData, setModifiedProductData } = productDataSlice.actions;\r\n\r\nexport default productDataSlice.reducer;","export const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const API_URL = 'https://fortniteapi.io/v2/shop?lang=ru';","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   currentPage: 1,\r\n   productsPerPage: 12,\r\n}\r\n\r\nconst paginationSlice = createSlice({\r\n   name: 'pagination',\r\n   initialState,\r\n   reducers: {\r\n      setCurrentPage(state, action) {\r\n         state.currentPage = action.payload;\r\n      },\r\n      setProductsPerPage(state, action) {\r\n         state.productsPerPage = action.payload;\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setCurrentPage, setProductsPerPage } = paginationSlice.actions;\r\n\r\nexport default paginationSlice.reducer;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport './ProductsPagination.scss';\r\nimport { Pagination } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setCurrentPage } from '../../store/slices/paginationSlice';\r\n\r\nconst ProductsPagination = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData);\r\n   const { currentPage, productsPerPage } = useSelector(state => state.pagination)\r\n\r\n   const indexOfLastProduct = currentPage * productsPerPage;\r\n   const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n   const currentProducts = originProductData.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n   useEffect(() => {\r\n      dispatch(setModifiedProductData(currentProducts))\r\n   }, [currentPage])\r\n\r\n   const paginatePage = pageNumber => {\r\n      dispatch(setCurrentPage(pageNumber))\r\n   }\r\n\r\n   const totalPages = Math.ceil(originProductData.length / productsPerPage);\r\n   return (\r\n      <div>\r\n         <Pagination\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={(_, num) => paginatePage(num)}\r\n            sx={{ display: 'flex', justifyContent: 'center', mt: 5 }}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProductsPagination;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   searchValue: '',\r\n}\r\n\r\nconst searchSlice = createSlice({\r\n   name: 'search',\r\n   initialState,\r\n   reducers: {\r\n      setSearchValue(state, action) {\r\n         state.searchValue = action.payload;\r\n      },\r\n   }\r\n})\r\n\r\nexport const { setSearchValue } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;","import React from 'react';\r\nimport './SearchField.scss';\r\nimport { TextField } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setSearchValue } from '../../store/slices/searchSlice';\r\n\r\nconst SearchField = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData)\r\n   const { searchValue } = useSelector(state => state.search);\r\n\r\n   const handleSearch = value => {\r\n      if (!value) {\r\n         dispatch(setModifiedProductData(originProductData));\r\n         dispatch(setSearchValue(''))\r\n         return;\r\n      }\r\n      dispatch(setSearchValue(value));\r\n      dispatch(setModifiedProductData(\r\n         originProductData.filter(product => {\r\n            return product.displayName.toLowerCase().includes(value.toLowerCase())\r\n         })\r\n      ));\r\n   }\r\n   return (\r\n      <>\r\n         <TextField\r\n            label='Умный поиск...'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type='search'\r\n            value={searchValue}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            sx={{\r\n               mb: '1.5rem'\r\n            }}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport './BasketItem.scss';\r\nimport { Close } from '@mui/icons-material';\r\nimport { Button, IconButton, ListItem, ListItemText } from '@mui/material';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\n\r\nconst BasketItem = ({\r\n   mainId,\r\n   displayName,\r\n   finalPrice,\r\n   clothingSize,\r\n   quantity,\r\n   plusQuantity = () => { },\r\n   minusQuantity = () => { },\r\n   removeFromOrder = () => { }\r\n}) => {\r\n   return (\r\n      <ListItem>\r\n         <ListItemText\r\n            sx={{\r\n               flexBasis: '200px',\r\n            }}\r\n         >\r\n            {displayName} <strong>{finalPrice} грн. x 1</strong> ({clothingSize})\r\n\r\n         </ListItemText>\r\n         <ListItemText\r\n            sx={{\r\n               flexDirection: 'column',\r\n               justifyContent: 'center',\r\n               flexShrink: 0,\r\n            }}\r\n         >\r\n            <Button onClick={() => minusQuantity(mainId)}><RemoveCircleOutlineOutlinedIcon /></Button>\r\n            <span>{quantity}</span>\r\n            <Button onClick={() => plusQuantity(mainId)}><AddCircleOutlineOutlinedIcon /></Button>\r\n         </ListItemText>\r\n         <IconButton\r\n            onClick={() => removeFromOrder(mainId)}\r\n         >\r\n            <Close />\r\n         </IconButton>\r\n      </ListItem>\r\n   );\r\n}\r\n\r\nexport default BasketItem;","import React from 'react';\r\nimport './BasketList.scss';\r\nimport { ShoppingCart } from '@mui/icons-material';\r\nimport { Button, Divider, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport BasketItem from '../BasketItem/BasketItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst BasketList = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n\r\n   const plusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity + 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const minusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity - 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity >= 1 ? newQuantity : 1\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const removeFromOrder = (itemId) => {\r\n      const newOrder = orders.filter(elem => elem.mainId !== itemId);\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n   return (\r\n      <List sx={{ width: '400px' }}>\r\n         <ListItem>\r\n            <ListItemIcon>\r\n               <ShoppingCart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n         </ListItem>\r\n         <Divider />\r\n         {\r\n            !orders.length ? (\r\n               <ListItem>Корзина пуста</ListItem>\r\n            ) : (\r\n               <>\r\n                  {orders.map(item => {\r\n                     return (\r\n                        <BasketItem\r\n                           key={item.mainId}\r\n                           {...item}\r\n                           plusQuantity={plusQuantity}\r\n                           minusQuantity={minusQuantity}\r\n                           removeFromOrder={removeFromOrder}\r\n                        />\r\n                     )\r\n                  })}\r\n                  <Divider />\r\n                  <ListItem>\r\n                     <ListItemText sx={{ fontWeight: 700 }}>\r\n                        <strong>Общая стоимость: {totalAmount} грн.</strong>\r\n                     </ListItemText>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                     <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => dispatch(setBasketShow(false))}\r\n                     >\r\n                        Оформить покупку\r\n                     </Button>\r\n                  </ListItem>\r\n               </>\r\n            )}\r\n      </List>\r\n   );\r\n}\r\n\r\nexport default BasketList;","import React from 'react';\r\nimport './Basket.scss';\r\nimport { Drawer } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\nimport BasketList from '../BasketList/BasketList';\r\n\r\nconst Basket = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n   const { isBasketShow } = useSelector(state => state.basket)\r\n   return (\r\n      <Drawer\r\n         anchor=\"right\"\r\n         open={isBasketShow}\r\n         onClose={() => dispatch(setBasketShow(false))}\r\n      >\r\n         <BasketList\r\n            orders={orders}\r\n            totalAmount={totalAmount}\r\n         />\r\n      </Drawer>\r\n   );\r\n}\r\n\r\nexport default Basket;","import React from 'react';\r\nimport './BasketNotice.scss';\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNoticeShow } from '../../store/slices/basketSlice';\r\n\r\nconst BasketNotice = () => {\r\n   const dispatch = useDispatch();\r\n   const { isNoticeShow } = useSelector(state => state.basket);\r\n   return (\r\n      <div>\r\n         <Snackbar\r\n            open={isNoticeShow}\r\n            onClose={() => dispatch(setNoticeShow(false))}\r\n            autoHideDuration={4000}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n         >\r\n            <Alert\r\n               severity=\"info\"\r\n            >\r\n               Товар добавлен в корзину!\r\n            </Alert>\r\n         </Snackbar>\r\n      </div >\r\n   );\r\n}\r\n\r\nexport default BasketNotice;","import React from 'react';\r\nimport { LinearProgress } from '@mui/material';\r\nimport ProductList from '../ProductList/ProductList';\r\nimport ProductsPagination from '../ProductsPagination/ProductsPagination';\r\nimport SearchField from '../SearchField/SearchField';\r\nimport { useSelector } from 'react-redux';\r\nimport Basket from '../Basket/Basket';\r\nimport BasketNotice from '../BasketNotice/BasketNotice';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst Shop = ({ orders, totalAmount }) => {\r\n   const { searchValue } = useSelector(state => state.search);\r\n   const { modifiedProductData, loadingProgress } = useSelector(state => state.productData);\r\n   const location = useLocation();\r\n   return (\r\n      <>\r\n         {\r\n            loadingProgress ? <LinearProgress /> :\r\n               (\r\n                  <>\r\n                     <SearchField />\r\n                     {\r\n                        modifiedProductData.length !== 0 ? <ProductList />\r\n                           : <h3 style={{ textAlign: 'center' }}>Nothing not found</h3>\r\n                     }\r\n                     {\r\n                        searchValue === '' ? <ProductsPagination />\r\n                           : null\r\n                     }\r\n                  </>\r\n               )\r\n         }\r\n         {\r\n            location.pathname === '/' ?\r\n               <>\r\n                  <Basket\r\n                     orders={orders}\r\n                     totalAmount={totalAmount}\r\n                  />\r\n                  <BasketNotice />\r\n               </>\r\n               : null\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Shop;","import { Button, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst Thanks = () => {\r\n   const navigate = useNavigate();\r\n   const goHome = () => navigate('/', { replace: true });\r\n   return (\r\n      <>\r\n         <Typography variant=\"h4\" component=\"h1\" sx={{ textAlign: 'center' }}>\r\n            Спасибо за заказ приходите еще!\r\n         </Typography>\r\n         <Button\r\n            variant=\"outlined\"\r\n            sx={{ margin: '20px auto 0 auto', display: 'block' }}\r\n            onClick={goHome}\r\n         >\r\n            На главную\r\n         </Button>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Thanks;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Container } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport { Route, Routes } from 'react-router';\nimport './App.scss';\nimport Checkout from './components/Checkout/Checkout';\nimport Header from './components/Header/Header';\nimport Shop from './components/Shop/Shop';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductData } from './store/slices/productDataSlice';\nimport { setOrders, setTotalAmount } from './store/slices/basketSlice';\nimport Thanks from './components/Thanks/Thanks';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { orders, totalAmount } = useSelector(state => state.basket)\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    dispatch(fetchProductData());\n  }, [])\n\n  useEffect(() => {\n    const localOrders = JSON.parse(localStorage.getItem('orders'))\n    if (localOrders !== null && localOrders.length > 0) {\n      dispatch(setOrders(localOrders));\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      localStorage.setItem('orders', JSON.stringify(orders))\n    }\n  }, [orders])\n\n  useEffect(() => {\n    dispatch(setTotalAmount(orders.reduce((acc, item) => {\n      return acc + item.finalPrice * item.quantity\n    }, 0)));\n  }, [orders])\n\n  return (\n    <>\n      <Header quantity={orders.length} />\n      <Container sx={{ pt: '120px', pb: '88px' }}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Shop orders={orders} totalAmount={totalAmount} />\n            }\n          />\n          <Route\n            path=\"checkout\"\n            element={<Checkout orders={orders} totalAmount={totalAmount} />}\n          />\n          <Route\n            path=\"checkout/thanks\"\n            element={<Thanks />}\n          />\n        </Routes>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport basketReducer from \"./slices/basketSlice\";\r\nimport paginationReducer from \"./slices/paginationSlice\";\r\nimport productDataReducer from \"./slices/productDataSlice\";\r\nimport searchReducer from \"./slices/searchSlice\";\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      productData: productDataReducer,\r\n      basket: basketReducer,\r\n      pagination: paginationReducer,\r\n      search: searchReducer,\r\n   }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}