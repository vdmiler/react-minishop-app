{"version":3,"sources":["components/Checkout/Checkout.jsx","store/slices/basketSlice.js","components/Header/Header.jsx","components/ProductItem/ProductItem.jsx","components/ProductList/ProductList.jsx","store/slices/productDataSlice.js","config.js","store/slices/paginationSlice.js","components/ProductsPagination/ProductsPagination.jsx","store/slices/searchSlice.js","components/SearchField/SearchField.jsx","components/BasketItem/BasketItem.jsx","components/BasketList/BasketList.jsx","components/Basket/Basket.jsx","components/BasketNotice/BasketNotice.jsx","components/Shop/Shop.jsx","App.js","store/index.js","index.js"],"names":["Checkout","orders","totalAmount","navigate","useNavigate","checkoutValidationSchema","yup","name","min","max","required","surname","email","checkoutInitialValues","Typography","variant","component","sx","mb","formik","useFormik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","className","handleSubmit","style","display","justifyContent","flexBasis","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","List","map","order","ListItem","ListItemIcon","ListItemText","displayName","quantity","mainId","Button","color","type","CheckoutForm","onClick","mt","basketSlice","createSlice","initialState","isBasketShow","isNoticeShow","reducers","setOrders","state","action","payload","setTotalAmount","setBasketShow","setNoticeShow","actions","Header","location","useLocation","dispatch","useDispatch","AppBar","position","Container","fixed","Toolbar","flexGrow","pathname","IconButton","edge","Badge","badgeContent","ProductItem","props","granted","price","displayDescription","useSelector","basket","imageUrl","images","full_background","finalPrice","Grid","item","xs","md","Card","maxWidth","height","margin","CardMedia","image","alt","CardContent","gutterBottom","CardActions","size","ml","itemIndex","findIndex","orderItem","newItem","newOrder","index","addToBasket","ProductList","modifiedProductData","productData","container","spacing","product","textAlign","fetchProductData","createAsyncThunk","a","axios","get","headers","process","response","data","shop","console","productDataSlice","originProductData","loadingProgress","errorFetch","setOriginProductData","setModifiedProductData","extraReducers","pending","fulfilled","rejected","paginationSlice","currentPage","productsPerPage","setCurrentPage","setProductsPerPage","ProductsPagination","pagination","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","useEffect","totalPages","Math","ceil","length","Pagination","count","page","_","num","searchSlice","searchValue","setSearchValue","SearchField","search","e","filter","toLowerCase","includes","handleSearch","target","BasketItem","plusQuantity","minusQuantity","removeFromOrder","flexDirection","flexShrink","Close","BasketList","itemId","el","newQuantity","elem","width","primary","Divider","fontWeight","Link","to","Basket","Drawer","anchor","open","onClose","BasketNotice","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Shop","LinearProgress","App","isInitialMount","useRef","localOrders","parse","localStorage","getItem","current","setItem","reduce","acc","pt","pb","path","element","store","configureStore","reducer","productDataReducer","basketReducer","paginationReducer","searchReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84143470.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Checkout.scss';\r\nimport * as yup from 'yup';\r\nimport { Button, List, ListItem, ListItemIcon, ListItemText, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\nimport { useFormik } from 'formik';\r\nimport RedeemIcon from '@mui/icons-material/Redeem';\r\n\r\nconst Checkout = ({ orders = [], totalAmount }) => {\r\n   const navigate = useNavigate();\r\n   const goBack = () => navigate(-1);\r\n   const checkoutValidationSchema = yup.object({\r\n      name: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      surname: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      email: yup\r\n         .string()\r\n         .email('Неверный адрес электронной почты\"')\r\n         .required('Обязательное поле'),\r\n   });\r\n\r\n   const checkoutInitialValues = {\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n   }\r\n\r\n   const CheckoutForm = () => {\r\n      const formik = useFormik({\r\n         initialValues: checkoutInitialValues,\r\n         validationSchema: checkoutValidationSchema,\r\n         onSubmit: (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n         },\r\n      });\r\n      return (\r\n         <div>\r\n            <form className=\"checkout__form\" onSubmit={formik.handleSubmit} style={{\r\n               display: 'flex',\r\n               justifyContent: 'space-between'\r\n            }}>\r\n               <div className=\"checkout__fields\" style={{\r\n                  flexBasis: '50%'\r\n               }}>\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Контактная информация\r\n                  </Typography>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Имя\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"surname\"\r\n                        name=\"surname\"\r\n                        label=\"Фамилия\"\r\n                        value={formik.values.surname}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.surname && Boolean(formik.errors.surname)}\r\n                        helperText={formik.touched.surname && formik.errors.surname}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                     />\r\n                  </div>\r\n               </div>\r\n               <div className=\"checkout__check\" style={{\r\n                  flexBasis: '40%'\r\n               }}>\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Оформление заказа\r\n                  </Typography>\r\n                  <List>\r\n                     {\r\n                        orders.map(order => {\r\n                           return (\r\n                              <ListItem key={order.mainId}>\r\n                                 <ListItemIcon>\r\n                                    <RedeemIcon />\r\n                                 </ListItemIcon>\r\n                                 <ListItemText>\r\n                                    {order.displayName} X {order.quantity}\r\n                                 </ListItemText>\r\n                              </ListItem>\r\n                           )\r\n                        })\r\n                     }\r\n                     <ListItem>\r\n                        <ListItemText>\r\n                           <strong>Всего: {totalAmount}</strong>\r\n                        </ListItemText>\r\n                     </ListItem>\r\n                  </List>\r\n                  <Button className=\"checkout__btn\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n                     Оформить заказ\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 8 }}>\r\n            Оформление заказа\r\n         </Typography>\r\n         {CheckoutForm()}\r\n         <Button\r\n            variant=\"outlined\"\r\n            onClick={goBack}\r\n            sx={{ mt: 8 }}\r\n         >\r\n            Назад\r\n         </Button>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Checkout;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   totalAmount: 0,\r\n   isBasketShow: false,\r\n   isNoticeShow: false,\r\n}\r\n\r\nconst basketSlice = createSlice({\r\n   name: 'basket',\r\n   initialState,\r\n   reducers: {\r\n      setOrders(state, action) {\r\n         state.orders = action.payload\r\n      },\r\n      setTotalAmount(state, action) {\r\n         state.totalAmount = action.payload\r\n      },\r\n      setBasketShow(state, action) {\r\n         state.isBasketShow = action.payload\r\n      },\r\n      setNoticeShow(state, action) {\r\n         state.isNoticeShow = action.payload\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setOrders, setTotalAmount, setBasketShow, setNoticeShow } = basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;","import React from 'react';\r\nimport './Header.scss';\r\nimport { AppBar, Container, Toolbar, Typography, Badge, IconButton } from '@mui/material';\r\nimport ShoppingCart from '@mui/icons-material/ShoppingCart';\r\nimport { useLocation } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\n\r\nconst Header = ({ quantity }) => {\r\n   const location = useLocation();\r\n   const dispatch = useDispatch();\r\n\r\n   return (\r\n      <AppBar position=\"fixed\">\r\n         <Container fixed>\r\n            <Toolbar>\r\n               <Typography\r\n                  variant=\"h6\"\r\n                  component=\"span\"\r\n                  sx={{ flexGrow: 1 }}\r\n               >\r\n                  Mini Market\r\n               </Typography>\r\n               {\r\n                  location.pathname === '/' ? (\r\n                     <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={() => dispatch(setBasketShow(true))}\r\n                     >\r\n                        <Badge\r\n                           color=\"secondary\"\r\n                           badgeContent={quantity}\r\n                        >\r\n                           <ShoppingCart />\r\n                        </Badge>\r\n                     </IconButton>\r\n                  ) : null\r\n               }\r\n            </Toolbar>\r\n         </Container>\r\n      </AppBar>\r\n   );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ProductItem.scss';\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNoticeShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst ProductItem = (props) => {\r\n\r\n   const { mainId, granted, displayName, price, displayDescription } = props;\r\n\r\n   const dispatch = useDispatch();\r\n   const { orders } = useSelector(state => state.basket);\r\n\r\n   const addToBasket = (item) => {\r\n      const itemIndex = orders.findIndex(orderItem => orderItem.mainId === item.mainId)\r\n      if (itemIndex < 0) {\r\n         const newItem = {\r\n            ...item,\r\n            quantity: 1\r\n         }\r\n         dispatch(setOrders([...orders, newItem]))\r\n      } else {\r\n         const newOrder = orders.map((orderItem, index) => {\r\n            if (index === itemIndex) {\r\n               return {\r\n                  ...orderItem,\r\n                  quantity: orderItem.quantity + 1\r\n               }\r\n            } else {\r\n               return orderItem;\r\n            }\r\n         })\r\n         dispatch(setOrders(newOrder))\r\n      }\r\n      dispatch(setNoticeShow(true))\r\n   }\r\n\r\n   const imageUrl = granted[0].images.full_background;\r\n   const finalPrice = price.finalPrice;\r\n\r\n   return (\r\n      <Grid item xs={12} md={4}>\r\n         <Card sx={{\r\n            maxWidth: 345,\r\n            height: '100%',\r\n            margin: '0 auto'\r\n         }}>\r\n            <CardMedia\r\n               component=\"img\"\r\n               height=\"auto\"\r\n               image={imageUrl}\r\n               alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n               <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                  {displayName}\r\n               </Typography>\r\n               <Typography variant=\"h6\" component=\"div\" sx={{ mb: 1, color: '#f44336' }}>\r\n                  {finalPrice} грн.\r\n               </Typography>\r\n               <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {displayDescription}\r\n               </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n               <Button\r\n                  variant=\"outlined\"\r\n                  size=\"medium\"\r\n                  color=\"success\"\r\n                  sx={{ ml: 'auto' }}\r\n                  onClick={() => addToBasket({\r\n                     mainId,\r\n                     displayName,\r\n                     finalPrice,\r\n                  })}>Купить</Button>\r\n            </CardActions>\r\n         </Card>\r\n      </Grid>\r\n   );\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport './ProductList.scss';\r\nimport ProductItem from '../ProductItem/ProductItem';\r\nimport { Grid } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductList = () => {\r\n   const { modifiedProductData } = useSelector(state => state.productData)\r\n   return (\r\n      <>\r\n         {\r\n            modifiedProductData ? (\r\n               <Grid container spacing={2}>\r\n                  {\r\n                     modifiedProductData.map(product => {\r\n                        return (\r\n                           <ProductItem key={product.mainId} {...product} />\r\n                        )\r\n                     })\r\n                  }\r\n               </Grid>\r\n            ) : (\r\n               <h3 style={{ textAlign: 'center' }}>Nothing here</h3>\r\n            )\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ProductList;","import axios from \"axios\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API_KEY, API_URL } from \"../../config\";\r\n\r\nexport const fetchProductData = createAsyncThunk(\r\n   'products/fetchProductData',\r\n   async function () {\r\n      try {\r\n         const response = await axios.get(API_URL, {\r\n            headers: {\r\n               'Authorization': API_KEY\r\n            }\r\n         })\r\n         const productData = await response.data.shop\r\n         return productData;\r\n      } catch (err) {\r\n         console.error(err.response);\r\n      }\r\n   }\r\n)\r\n\r\nconst initialState = {\r\n   originProductData: [],\r\n   modifiedProductData: [],\r\n   loadingProgress: false,\r\n   errorFetch: null,\r\n}\r\n\r\nconst productDataSlice = createSlice({\r\n   name: 'productData',\r\n   initialState,\r\n   reducers: {\r\n      setOriginProductData(state, action) {\r\n         state.originProductData = action.payload\r\n      },\r\n      setModifiedProductData(state, action) {\r\n         state.modifiedProductData = action.payload\r\n      }\r\n   },\r\n   extraReducers: {\r\n      [fetchProductData.pending]: (state, action) => {\r\n         state.loadingProgress = true;\r\n      },\r\n      [fetchProductData.fulfilled]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.originProductData = action.payload;\r\n         state.modifiedProductData = action.payload;\r\n      },\r\n      [fetchProductData.rejected]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.errorFetch = action.payload;\r\n      },\r\n   }\r\n});\r\n\r\nexport const { setOriginProductData, setModifiedProductData } = productDataSlice.actions;\r\n\r\nexport default productDataSlice.reducer;","export const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const API_URL = 'https://fortniteapi.io/v2/shop?lang=ru';","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   currentPage: 1,\r\n   productsPerPage: 12,\r\n}\r\n\r\nconst paginationSlice = createSlice({\r\n   name: 'pagination',\r\n   initialState,\r\n   reducers: {\r\n      setCurrentPage(state, action) {\r\n         state.currentPage = action.payload;\r\n      },\r\n      setProductsPerPage(state, action) {\r\n         state.productsPerPage = action.payload;\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setCurrentPage, setProductsPerPage } = paginationSlice.actions;\r\n\r\nexport default paginationSlice.reducer;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport './ProductsPagination.scss';\r\nimport { Pagination } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setCurrentPage } from '../../store/slices/paginationSlice';\r\n\r\nconst ProductsPagination = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData);\r\n   const { currentPage, productsPerPage } = useSelector(state => state.pagination)\r\n\r\n   const indexOfLastProduct = currentPage * productsPerPage;\r\n   const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n   const currentProducts = originProductData.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n   useEffect(() => {\r\n      dispatch(setModifiedProductData(currentProducts))\r\n   }, [currentPage])\r\n\r\n   const paginatePage = pageNumber => {\r\n      dispatch(setCurrentPage(pageNumber))\r\n   }\r\n   const totalPages = Math.ceil(originProductData.length / productsPerPage);\r\n   return (\r\n      <div>\r\n         <Pagination\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={(_, num) => paginatePage(num)}\r\n            sx={{ display: 'flex', justifyContent: 'center', mt: 5 }}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProductsPagination;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   searchValue: '',\r\n}\r\n\r\nconst searchSlice = createSlice({\r\n   name: 'search',\r\n   initialState,\r\n   reducers: {\r\n      setSearchValue(state, action) {\r\n         state.searchValue = action.payload;\r\n      },\r\n   }\r\n})\r\n\r\nexport const { setSearchValue } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;","import React from 'react';\r\nimport './SearchField.scss';\r\nimport { TextField } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setSearchValue } from '../../store/slices/searchSlice';\r\n\r\nconst SearchField = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData)\r\n   const { searchValue } = useSelector(state => state.search);\r\n\r\n   const handleSearch = value => {\r\n      if (!value) {\r\n         dispatch(setModifiedProductData(originProductData));\r\n         dispatch(setSearchValue(''))\r\n         return;\r\n      }\r\n      dispatch(setSearchValue(value));\r\n      dispatch(setModifiedProductData(\r\n         originProductData.filter(product => {\r\n            return product.displayName.toLowerCase().includes(value.toLowerCase())\r\n         })\r\n      ));\r\n   }\r\n   return (\r\n      <>\r\n         <TextField\r\n            label='Умный поиск...'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type='search'\r\n            value={searchValue}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            sx={{\r\n               mb: '1.5rem'\r\n            }}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport './BasketItem.scss';\r\nimport { Close } from '@mui/icons-material';\r\nimport { Button, IconButton, ListItem, ListItemText } from '@mui/material';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\n\r\nconst BasketItem = ({\r\n   mainId,\r\n   displayName,\r\n   finalPrice,\r\n   quantity,\r\n   plusQuantity = () => { },\r\n   minusQuantity = () => { },\r\n   removeFromOrder = () => { }\r\n}) => {\r\n   return (\r\n      <ListItem>\r\n         <ListItemText\r\n            sx={{\r\n               flexBasis: '200px',\r\n            }}\r\n         >\r\n            {displayName} <strong>{finalPrice} грн. x 1</strong>\r\n         </ListItemText>\r\n         <ListItemText\r\n            sx={{\r\n               flexDirection: 'column',\r\n               justifyContent: 'center',\r\n               flexShrink: 0,\r\n            }}\r\n         >\r\n            <Button onClick={() => minusQuantity(mainId)}><RemoveCircleOutlineOutlinedIcon /></Button>\r\n            <span>{quantity}</span>\r\n            <Button onClick={() => plusQuantity(mainId)}><AddCircleOutlineOutlinedIcon /></Button>\r\n         </ListItemText>\r\n         <IconButton\r\n            onClick={() => removeFromOrder(mainId)}\r\n         >\r\n            <Close />\r\n         </IconButton>\r\n      </ListItem>\r\n   );\r\n}\r\n\r\nexport default BasketItem;","import React from 'react';\r\nimport './BasketList.scss';\r\nimport { ShoppingCart } from '@mui/icons-material';\r\nimport { Button, Divider, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport BasketItem from '../BasketItem/BasketItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst BasketList = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n\r\n   const plusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity + 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const minusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity - 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity >= 1 ? newQuantity : 1\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const removeFromOrder = (itemId) => {\r\n      const newOrder = orders.filter(elem => elem.mainId !== itemId);\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   return (\r\n      <List sx={{ width: '400px' }}>\r\n         <ListItem>\r\n            <ListItemIcon>\r\n               <ShoppingCart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n         </ListItem>\r\n         <Divider />\r\n         {\r\n            !orders.length ? (\r\n               <ListItem>Корзина пуста</ListItem>\r\n            ) : (\r\n               <>\r\n                  {orders.map(item => {\r\n                     return (\r\n                        <BasketItem\r\n                           key={item.mainId}\r\n                           {...item}\r\n                           plusQuantity={plusQuantity}\r\n                           minusQuantity={minusQuantity}\r\n                           removeFromOrder={removeFromOrder}\r\n                        />\r\n                     )\r\n                  })}\r\n                  <Divider />\r\n                  <ListItem>\r\n                     <ListItemText sx={{ fontWeight: 700 }}>\r\n                        <strong>Общая стоимость: {totalAmount} грн.</strong>\r\n                     </ListItemText>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                     <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => dispatch(setBasketShow(false))}\r\n                     >\r\n                        Оформить покупку\r\n                     </Button>\r\n                  </ListItem>\r\n               </>\r\n            )}\r\n      </List>\r\n   );\r\n}\r\n\r\nexport default BasketList;","import React from 'react';\r\nimport './Basket.scss';\r\nimport { Drawer } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\nimport BasketList from '../BasketList/BasketList';\r\n\r\nconst Basket = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n   const { isBasketShow } = useSelector(state => state.basket)\r\n   return (\r\n      <Drawer\r\n         anchor=\"right\"\r\n         open={isBasketShow}\r\n         onClose={() => dispatch(setBasketShow(false))}\r\n      >\r\n         <BasketList\r\n            orders={orders}\r\n            totalAmount={totalAmount}\r\n         />\r\n      </Drawer>\r\n   );\r\n}\r\n\r\nexport default Basket;","import React from 'react';\r\nimport './BasketNotice.scss';\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNoticeShow } from '../../store/slices/basketSlice';\r\n\r\nconst BasketNotice = () => {\r\n   const dispatch = useDispatch();\r\n   const { isNoticeShow } = useSelector(state => state.basket);\r\n   return (\r\n      <div>\r\n         <Snackbar\r\n            open={isNoticeShow}\r\n            onClose={() => dispatch(setNoticeShow(false))}\r\n            autoHideDuration={4000}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n         >\r\n            <Alert\r\n               severity=\"info\"\r\n            >\r\n               Товар добавлен в корзину!\r\n            </Alert>\r\n         </Snackbar>\r\n      </div >\r\n   );\r\n}\r\n\r\nexport default BasketNotice;","import React from 'react';\r\nimport { LinearProgress } from '@mui/material';\r\nimport ProductList from '../ProductList/ProductList';\r\nimport ProductsPagination from '../ProductsPagination/ProductsPagination';\r\nimport SearchField from '../SearchField/SearchField';\r\nimport { useSelector } from 'react-redux';\r\nimport Basket from '../Basket/Basket';\r\nimport BasketNotice from '../BasketNotice/BasketNotice';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst Shop = ({ orders, totalAmount }) => {\r\n   const { searchValue } = useSelector(state => state.search);\r\n   const { modifiedProductData, loadingProgress } = useSelector(state => state.productData);\r\n   const location = useLocation();\r\n   return (\r\n      <>\r\n         {\r\n            loadingProgress ? <LinearProgress /> :\r\n               (\r\n                  <>\r\n                     <SearchField />\r\n                     {\r\n                        modifiedProductData.length !== 0 ? <ProductList />\r\n                           : <h3 style={{ textAlign: 'center' }}>Nothing not found</h3>\r\n                     }\r\n                     {\r\n                        searchValue === '' ? <ProductsPagination />\r\n                           : null\r\n                     }\r\n                  </>\r\n               )\r\n         }\r\n         {\r\n            location.pathname === '/' ?\r\n               <>\r\n                  <Basket\r\n                     orders={orders}\r\n                     totalAmount={totalAmount}\r\n                  />\r\n                  <BasketNotice />\r\n               </>\r\n               : null\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Shop;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Container } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport { Route, Routes } from 'react-router';\nimport './App.scss';\nimport Checkout from './components/Checkout/Checkout';\nimport Header from './components/Header/Header';\nimport Shop from './components/Shop/Shop';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductData } from './store/slices/productDataSlice';\nimport { setOrders, setTotalAmount } from './store/slices/basketSlice';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { orders, totalAmount } = useSelector(state => state.basket)\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    dispatch(fetchProductData());\n  }, [])\n\n  useEffect(() => {\n    const localOrders = JSON.parse(localStorage.getItem('orders'))\n    if (localOrders !== null && localOrders.length > 0) {\n      dispatch(setOrders(localOrders));\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      localStorage.setItem('orders', JSON.stringify(orders))\n    }\n  }, [orders])\n\n  useEffect(() => {\n    dispatch(setTotalAmount(orders.reduce((acc, item) => {\n      return acc + item.finalPrice * item.quantity\n    }, 0)));\n  }, [orders])\n\n  return (\n    <>\n      <Header quantity={orders.length} />\n      <Container sx={{ pt: '120px', pb: '88px' }}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Shop orders={orders} totalAmount={totalAmount} />\n            }\n          />\n          <Route\n            path=\"checkout\"\n            element={<Checkout orders={orders} totalAmount={totalAmount} />}\n          />\n        </Routes>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport basketReducer from \"./slices/basketSlice\";\r\nimport paginationReducer from \"./slices/paginationSlice\";\r\nimport productDataReducer from \"./slices/productDataSlice\";\r\nimport searchReducer from \"./slices/searchSlice\";\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      productData: productDataReducer,\r\n      basket: basketReducer,\r\n      pagination: paginationReducer,\r\n      search: searchReducer,\r\n   }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}