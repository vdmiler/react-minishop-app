{"version":3,"sources":["components/Checkout/Checkout.jsx","store/slices/basketSlice.js","components/Header/Header.jsx","components/ModalDetail/ModalDetail.jsx","components/ProductItem/ProductItem.jsx","components/ProductList/ProductList.jsx","store/slices/productDataSlice.js","config.js","store/slices/paginationSlice.js","components/ProductsPagination/ProductsPagination.jsx","store/slices/searchSlice.js","components/SearchField/SearchField.jsx","components/BasketItem/BasketItem.jsx","components/BasketList/BasketList.jsx","components/Basket/Basket.jsx","components/BasketNotice/BasketNotice.jsx","components/Shop/Shop.jsx","App.js","store/index.js","index.js"],"names":["Checkout","orders","totalAmount","navigate","useNavigate","checkoutValidationSchema","yup","name","min","max","required","surname","email","checkoutInitialValues","Typography","variant","component","sx","mb","formik","useFormik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","console","log","className","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","List","map","order","ListItem","ListItemIcon","ListItemText","displayName","quantity","mainId","Button","color","type","CheckoutForm","onClick","mt","basketSlice","createSlice","initialState","isBasketShow","isNoticeShow","reducers","setOrders","state","action","payload","setTotalAmount","setBasketShow","setNoticeShow","actions","Header","location","useLocation","dispatch","useDispatch","AppBar","position","Container","fixed","Toolbar","flexGrow","pathname","IconButton","edge","Badge","badgeContent","ModalDetail","imageUrl","displayDescription","finalPrice","isActiveModal","setActiveModal","clothingSize","setClothingSize","useSelector","basket","Modal","open","onClose","Box","top","left","transform","maxWidth","width","bgcolor","border","boxShadow","p","textAlign","src","alt","style","height","FormControl","InputLabel","Select","labelId","e","target","MenuItem","size","item","itemIndex","findIndex","orderItem","newItem","newOrder","index","addToBasket","ProductItem","props","granted","price","images","full_background","useState","Grid","xs","md","Card","margin","CardMedia","image","CardContent","gutterBottom","CardActions","ml","ProductList","modifiedProductData","productData","container","spacing","product","fetchProductData","createAsyncThunk","a","axios","get","headers","process","response","data","shop","productDataSlice","originProductData","loadingProgress","errorFetch","setOriginProductData","setModifiedProductData","extraReducers","pending","fulfilled","rejected","paginationSlice","currentPage","productsPerPage","setCurrentPage","setProductsPerPage","ProductsPagination","pagination","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","useEffect","totalPages","Math","ceil","length","Pagination","count","page","_","num","display","justifyContent","searchSlice","searchValue","setSearchValue","SearchField","search","filter","toLowerCase","includes","handleSearch","BasketItem","plusQuantity","minusQuantity","removeFromOrder","flexBasis","flexDirection","flexShrink","Close","BasketList","itemId","el","newQuantity","elem","primary","Divider","fontWeight","Link","to","Basket","Drawer","anchor","BasketNotice","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Shop","LinearProgress","App","isInitialMount","useRef","localOrders","parse","localStorage","getItem","current","setItem","reduce","acc","pt","pb","path","element","store","configureStore","reducer","productDataReducer","basketReducer","paginationReducer","searchReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c41c3db.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Checkout.scss';\r\nimport * as yup from 'yup';\r\nimport { Button, List, ListItem, ListItemIcon, ListItemText, TextField, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\nimport { useFormik } from 'formik';\r\nimport RedeemIcon from '@mui/icons-material/Redeem';\r\n\r\nconst Checkout = ({ orders = [], totalAmount }) => {\r\n   const navigate = useNavigate();\r\n   const goBack = () => navigate(-1);\r\n   const checkoutValidationSchema = yup.object({\r\n      name: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      surname: yup\r\n         .string()\r\n         .min(2, 'Минимум 2 символа')\r\n         .max(20, 'Максимум 20 символов')\r\n         .required('Обязательное поле'),\r\n      email: yup\r\n         .string()\r\n         .email('Неверный адрес электронной почты\"')\r\n         .required('Обязательное поле'),\r\n   });\r\n\r\n   const checkoutInitialValues = {\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n   }\r\n\r\n   const CheckoutForm = () => {\r\n      const formik = useFormik({\r\n         initialValues: checkoutInitialValues,\r\n         validationSchema: checkoutValidationSchema,\r\n         onSubmit: (values) => {\r\n            alert(JSON.stringify([values, ...orders], null, 2));\r\n            console.log([values, ...orders])\r\n         },\r\n      });\r\n      return (\r\n         <>\r\n            <form className=\"checkout__form\" onSubmit={formik.handleSubmit}>\r\n               <div className=\"checkout__fields\">\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Контактная информация\r\n                  </Typography>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Имя\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"surname\"\r\n                        name=\"surname\"\r\n                        label=\"Фамилия\"\r\n                        value={formik.values.surname}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.surname && Boolean(formik.errors.surname)}\r\n                        helperText={formik.touched.surname && formik.errors.surname}\r\n                     />\r\n                  </div>\r\n                  <div className=\"checkout__input\">\r\n                     <TextField\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                     />\r\n                  </div>\r\n               </div>\r\n               <div className=\"checkout__check\">\r\n                  <Typography className=\"checkout__title\" variant=\"h5\" component=\"h2\">\r\n                     Оформление заказа\r\n                  </Typography>\r\n                  <List>\r\n                     {\r\n                        orders.map(order => {\r\n                           return (\r\n                              <ListItem key={order.mainId}>\r\n                                 <ListItemIcon>\r\n                                    <RedeemIcon />\r\n                                 </ListItemIcon>\r\n                                 <ListItemText>\r\n                                    {order.displayName} X {order.quantity}\r\n                                 </ListItemText>\r\n                              </ListItem>\r\n                           )\r\n                        })\r\n                     }\r\n                     <ListItem>\r\n                        <ListItemText>\r\n                           <strong>Всего: {totalAmount}</strong>\r\n                        </ListItemText>\r\n                     </ListItem>\r\n                  </List>\r\n                  <Button className=\"checkout__btn\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n                     Оформить заказ\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 8 }}>\r\n            Оформление заказа\r\n         </Typography>\r\n         {CheckoutForm()}\r\n         <Button\r\n            variant=\"outlined\"\r\n            onClick={goBack}\r\n            sx={{ mt: 8 }}\r\n         >\r\n            Назад\r\n         </Button>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Checkout;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   totalAmount: 0,\r\n   isBasketShow: false,\r\n   isNoticeShow: false,\r\n}\r\n\r\nconst basketSlice = createSlice({\r\n   name: 'basket',\r\n   initialState,\r\n   reducers: {\r\n      setOrders(state, action) {\r\n         state.orders = action.payload\r\n      },\r\n      setTotalAmount(state, action) {\r\n         state.totalAmount = action.payload\r\n      },\r\n      setBasketShow(state, action) {\r\n         state.isBasketShow = action.payload\r\n      },\r\n      setNoticeShow(state, action) {\r\n         state.isNoticeShow = action.payload\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setOrders, setTotalAmount, setBasketShow, setNoticeShow } = basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;","import React from 'react';\r\nimport './Header.scss';\r\nimport { AppBar, Container, Toolbar, Typography, Badge, IconButton } from '@mui/material';\r\nimport ShoppingCart from '@mui/icons-material/ShoppingCart';\r\nimport { useLocation } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\n\r\nconst Header = ({ quantity }) => {\r\n   const location = useLocation();\r\n   const dispatch = useDispatch();\r\n\r\n   return (\r\n      <AppBar position=\"fixed\">\r\n         <Container fixed>\r\n            <Toolbar>\r\n               <Typography\r\n                  variant=\"h6\"\r\n                  component=\"span\"\r\n                  sx={{ flexGrow: 1 }}\r\n               >\r\n                  Mini Market\r\n               </Typography>\r\n               {\r\n                  location.pathname === '/' ? (\r\n                     <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={() => dispatch(setBasketShow(true))}\r\n                     >\r\n                        <Badge\r\n                           color=\"secondary\"\r\n                           badgeContent={quantity}\r\n                        >\r\n                           <ShoppingCart />\r\n                        </Badge>\r\n                     </IconButton>\r\n                  ) : null\r\n               }\r\n            </Toolbar>\r\n         </Container>\r\n      </AppBar>\r\n   );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ModalDetail.scss';\r\nimport { Modal, Box, FormControl, InputLabel, Select, MenuItem, Typography, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { setNoticeShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst ModalDetail = ({\r\n   mainId,\r\n   imageUrl,\r\n   displayName,\r\n   displayDescription,\r\n   finalPrice,\r\n   isActiveModal,\r\n   setActiveModal,\r\n   clothingSize,\r\n   setClothingSize\r\n}) => {\r\n   const style = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      maxWidth: 400,\r\n      width: '100%',\r\n      bgcolor: 'background.paper',\r\n      border: '2px solid #000',\r\n      boxShadow: 24,\r\n      p: 4,\r\n   };\r\n\r\n   const dispatch = useDispatch();\r\n   const { orders } = useSelector(state => state.basket);\r\n\r\n   const addToBasket = (item) => {\r\n      const itemIndex = orders.findIndex(orderItem => orderItem.mainId === item.mainId)\r\n      if (itemIndex < 0) {\r\n         const newItem = {\r\n            ...item,\r\n            quantity: 1\r\n         }\r\n         dispatch(setOrders([...orders, newItem]))\r\n      } else {\r\n         const newOrder = orders.map((orderItem, index) => {\r\n            if (index === itemIndex) {\r\n               return {\r\n                  ...orderItem,\r\n                  quantity: orderItem.quantity + 1\r\n               }\r\n            } else {\r\n               return orderItem;\r\n            }\r\n         })\r\n         dispatch(setOrders(newOrder))\r\n      }\r\n      dispatch(setNoticeShow(true))\r\n   }\r\n\r\n   return (\r\n      <Modal\r\n         open={isActiveModal}\r\n         onClose={() => setActiveModal(false)}\r\n         aria-labelledby={displayName}\r\n         aria-describedby={displayDescription}\r\n      >\r\n         <Box sx={style}>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n               {displayName}\r\n            </Typography>\r\n            <Typography sx={{ mt: 2, mb: 2 }}>\r\n               {displayDescription}\r\n            </Typography>\r\n            <Box sx={{ textAlign: 'center' }}>\r\n               <img src={imageUrl} alt=\"\" style={{ width: '360px', height: 'auto' }} />\r\n            </Box>\r\n            <Typography sx={{ mt: 2 }}>\r\n               Цена: {finalPrice}\r\n            </Typography>\r\n            <Box sx={{ maxWidth: 100, mt: 2 }}>\r\n               <FormControl fullWidth>\r\n                  <InputLabel id=\"size-select-label\">Размер:</InputLabel>\r\n                  <Select\r\n                     labelId=\"size-label\"\r\n                     id=\"size-select\"\r\n                     value={clothingSize}\r\n                     label=\"Размер\"\r\n                     onChange={e => setClothingSize(e.target.value)}\r\n                  >\r\n                     <MenuItem value=\"M\">M</MenuItem>\r\n                     <MenuItem value=\"L\">L</MenuItem>\r\n                     <MenuItem value=\"XL\">XL</MenuItem>\r\n                     <MenuItem value=\"XXL\">XXL</MenuItem>\r\n                  </Select>\r\n               </FormControl>\r\n            </Box>\r\n            <Button\r\n               variant=\"outlined\"\r\n               size=\"medium\"\r\n               color=\"success\"\r\n               sx={{ mt: 4 }}\r\n               onClick={() => addToBasket({\r\n                  mainId,\r\n                  displayName,\r\n                  finalPrice,\r\n                  clothingSize\r\n               })}>В корзину</Button>\r\n         </Box>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalDetail;","import React, { useState } from 'react';\r\nimport './ProductItem.scss';\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@mui/material';\r\nimport ModalDetail from '../ModalDetail/ModalDetail';\r\n\r\nconst ProductItem = (props) => {\r\n   const { mainId, granted, displayName, price, displayDescription } = props;\r\n\r\n   const imageUrl = granted[0].images.full_background;\r\n   const finalPrice = price.finalPrice;\r\n\r\n   const [isActiveModal, setActiveModal] = useState(false);\r\n   const [clothingSize, setClothingSize] = useState('');\r\n   return (\r\n      <>\r\n         <Grid item xs={12} md={4}>\r\n            <Card sx={{\r\n               maxWidth: 345,\r\n               height: '100%',\r\n               margin: '0 auto'\r\n            }}\r\n            >\r\n               <CardMedia\r\n                  component=\"img\"\r\n                  height=\"auto\"\r\n                  image={imageUrl}\r\n                  alt=\"green iguana\"\r\n               />\r\n               <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                     {displayName}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" component=\"div\" sx={{ mb: 1, color: '#f44336' }}>\r\n                     {finalPrice} грн.\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                     {displayDescription}\r\n                  </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                  <Button\r\n                     variant=\"outlined\"\r\n                     size=\"medium\"\r\n                     color=\"success\"\r\n                     sx={{ ml: 'auto' }}\r\n                     onClick={() => setActiveModal(true)}\r\n                  >\r\n                     Выбрать\r\n                  </Button>\r\n               </CardActions>\r\n            </Card>\r\n         </Grid>\r\n         <ModalDetail\r\n            mainId={mainId}\r\n            imageUrl={imageUrl}\r\n            displayName={displayName}\r\n            displayDescription={displayDescription}\r\n            finalPrice={finalPrice}\r\n            isActiveModal={isActiveModal}\r\n            setActiveModal={setActiveModal}\r\n            clothingSize={clothingSize}\r\n            setClothingSize={setClothingSize}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport './ProductList.scss';\r\nimport ProductItem from '../ProductItem/ProductItem';\r\nimport { Grid } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductList = () => {\r\n   const { modifiedProductData } = useSelector(state => state.productData)\r\n   return (\r\n      <>\r\n         {\r\n            modifiedProductData ? (\r\n               <Grid container spacing={2}>\r\n                  {\r\n                     modifiedProductData.map(product => {\r\n                        return (\r\n                           <ProductItem key={product.mainId} {...product} />\r\n                        )\r\n                     })\r\n                  }\r\n               </Grid>\r\n            ) : (\r\n               <h3 style={{ textAlign: 'center' }}>Nothing here</h3>\r\n            )\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ProductList;","import axios from \"axios\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API_KEY, API_URL } from \"../../config\";\r\n\r\nexport const fetchProductData = createAsyncThunk(\r\n   'products/fetchProductData',\r\n   async function () {\r\n      try {\r\n         const response = await axios.get(API_URL, {\r\n            headers: {\r\n               'Authorization': API_KEY\r\n            }\r\n         })\r\n         const productData = await response.data.shop\r\n         return productData;\r\n      } catch (err) {\r\n         console.error(err.response);\r\n      }\r\n   }\r\n)\r\n\r\nconst initialState = {\r\n   originProductData: [],\r\n   modifiedProductData: [],\r\n   loadingProgress: false,\r\n   errorFetch: null,\r\n}\r\n\r\nconst productDataSlice = createSlice({\r\n   name: 'productData',\r\n   initialState,\r\n   reducers: {\r\n      setOriginProductData(state, action) {\r\n         state.originProductData = action.payload\r\n      },\r\n      setModifiedProductData(state, action) {\r\n         state.modifiedProductData = action.payload\r\n      }\r\n   },\r\n   extraReducers: {\r\n      [fetchProductData.pending]: (state, action) => {\r\n         state.loadingProgress = true;\r\n      },\r\n      [fetchProductData.fulfilled]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.originProductData = action.payload;\r\n         state.modifiedProductData = action.payload;\r\n      },\r\n      [fetchProductData.rejected]: (state, action) => {\r\n         state.loadingProgress = false;\r\n         state.errorFetch = action.payload;\r\n      },\r\n   }\r\n});\r\n\r\nexport const { setOriginProductData, setModifiedProductData } = productDataSlice.actions;\r\n\r\nexport default productDataSlice.reducer;","export const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const API_URL = 'https://fortniteapi.io/v2/shop?lang=ru';","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   currentPage: 1,\r\n   productsPerPage: 12,\r\n}\r\n\r\nconst paginationSlice = createSlice({\r\n   name: 'pagination',\r\n   initialState,\r\n   reducers: {\r\n      setCurrentPage(state, action) {\r\n         state.currentPage = action.payload;\r\n      },\r\n      setProductsPerPage(state, action) {\r\n         state.productsPerPage = action.payload;\r\n      }\r\n   }\r\n})\r\n\r\nexport const { setCurrentPage, setProductsPerPage } = paginationSlice.actions;\r\n\r\nexport default paginationSlice.reducer;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport './ProductsPagination.scss';\r\nimport { Pagination } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setCurrentPage } from '../../store/slices/paginationSlice';\r\n\r\nconst ProductsPagination = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData);\r\n   const { currentPage, productsPerPage } = useSelector(state => state.pagination)\r\n\r\n   const indexOfLastProduct = currentPage * productsPerPage;\r\n   const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n   const currentProducts = originProductData.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n   useEffect(() => {\r\n      dispatch(setModifiedProductData(currentProducts))\r\n   }, [currentPage])\r\n\r\n   const paginatePage = pageNumber => {\r\n      dispatch(setCurrentPage(pageNumber))\r\n   }\r\n   const totalPages = Math.ceil(originProductData.length / productsPerPage);\r\n   return (\r\n      <div>\r\n         <Pagination\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={(_, num) => paginatePage(num)}\r\n            sx={{ display: 'flex', justifyContent: 'center', mt: 5 }}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProductsPagination;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n   searchValue: '',\r\n}\r\n\r\nconst searchSlice = createSlice({\r\n   name: 'search',\r\n   initialState,\r\n   reducers: {\r\n      setSearchValue(state, action) {\r\n         state.searchValue = action.payload;\r\n      },\r\n   }\r\n})\r\n\r\nexport const { setSearchValue } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;","import React from 'react';\r\nimport './SearchField.scss';\r\nimport { TextField } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModifiedProductData } from '../../store/slices/productDataSlice';\r\nimport { setSearchValue } from '../../store/slices/searchSlice';\r\n\r\nconst SearchField = () => {\r\n   const dispatch = useDispatch();\r\n   const { originProductData } = useSelector(state => state.productData)\r\n   const { searchValue } = useSelector(state => state.search);\r\n\r\n   const handleSearch = value => {\r\n      if (!value) {\r\n         dispatch(setModifiedProductData(originProductData));\r\n         dispatch(setSearchValue(''))\r\n         return;\r\n      }\r\n      dispatch(setSearchValue(value));\r\n      dispatch(setModifiedProductData(\r\n         originProductData.filter(product => {\r\n            return product.displayName.toLowerCase().includes(value.toLowerCase())\r\n         })\r\n      ));\r\n   }\r\n   return (\r\n      <>\r\n         <TextField\r\n            label='Умный поиск...'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type='search'\r\n            value={searchValue}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            sx={{\r\n               mb: '1.5rem'\r\n            }}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport './BasketItem.scss';\r\nimport { Close } from '@mui/icons-material';\r\nimport { Button, IconButton, ListItem, ListItemText } from '@mui/material';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\n\r\nconst BasketItem = ({\r\n   mainId,\r\n   displayName,\r\n   finalPrice,\r\n   quantity,\r\n   plusQuantity = () => { },\r\n   minusQuantity = () => { },\r\n   removeFromOrder = () => { }\r\n}) => {\r\n   return (\r\n      <ListItem>\r\n         <ListItemText\r\n            sx={{\r\n               flexBasis: '200px',\r\n            }}\r\n         >\r\n            {displayName} <strong>{finalPrice} грн. x 1</strong>\r\n         </ListItemText>\r\n         <ListItemText\r\n            sx={{\r\n               flexDirection: 'column',\r\n               justifyContent: 'center',\r\n               flexShrink: 0,\r\n            }}\r\n         >\r\n            <Button onClick={() => minusQuantity(mainId)}><RemoveCircleOutlineOutlinedIcon /></Button>\r\n            <span>{quantity}</span>\r\n            <Button onClick={() => plusQuantity(mainId)}><AddCircleOutlineOutlinedIcon /></Button>\r\n         </ListItemText>\r\n         <IconButton\r\n            onClick={() => removeFromOrder(mainId)}\r\n         >\r\n            <Close />\r\n         </IconButton>\r\n      </ListItem>\r\n   );\r\n}\r\n\r\nexport default BasketItem;","import React from 'react';\r\nimport './BasketList.scss';\r\nimport { ShoppingCart } from '@mui/icons-material';\r\nimport { Button, Divider, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport BasketItem from '../BasketItem/BasketItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBasketShow, setOrders } from '../../store/slices/basketSlice';\r\n\r\nconst BasketList = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n\r\n   const plusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity + 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const minusQuantity = (itemId) => {\r\n      const newOrder = orders.map((el) => {\r\n         if (el.mainId === itemId) {\r\n            const newQuantity = el.quantity - 1\r\n            return {\r\n               ...el,\r\n               quantity: newQuantity >= 1 ? newQuantity : 1\r\n            }\r\n         } else {\r\n            return el\r\n         }\r\n      })\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   const removeFromOrder = (itemId) => {\r\n      const newOrder = orders.filter(elem => elem.mainId !== itemId);\r\n      dispatch(setOrders(newOrder));\r\n   }\r\n\r\n   return (\r\n      <List sx={{ width: '400px' }}>\r\n         <ListItem>\r\n            <ListItemIcon>\r\n               <ShoppingCart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n         </ListItem>\r\n         <Divider />\r\n         {\r\n            !orders.length ? (\r\n               <ListItem>Корзина пуста</ListItem>\r\n            ) : (\r\n               <>\r\n                  {orders.map(item => {\r\n                     return (\r\n                        <BasketItem\r\n                           key={item.mainId}\r\n                           {...item}\r\n                           plusQuantity={plusQuantity}\r\n                           minusQuantity={minusQuantity}\r\n                           removeFromOrder={removeFromOrder}\r\n                        />\r\n                     )\r\n                  })}\r\n                  <Divider />\r\n                  <ListItem>\r\n                     <ListItemText sx={{ fontWeight: 700 }}>\r\n                        <strong>Общая стоимость: {totalAmount} грн.</strong>\r\n                     </ListItemText>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                     <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => dispatch(setBasketShow(false))}\r\n                     >\r\n                        Оформить покупку\r\n                     </Button>\r\n                  </ListItem>\r\n               </>\r\n            )}\r\n      </List>\r\n   );\r\n}\r\n\r\nexport default BasketList;","import React from 'react';\r\nimport './Basket.scss';\r\nimport { Drawer } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setBasketShow } from '../../store/slices/basketSlice';\r\nimport BasketList from '../BasketList/BasketList';\r\n\r\nconst Basket = ({ orders = [], totalAmount }) => {\r\n   const dispatch = useDispatch();\r\n   const { isBasketShow } = useSelector(state => state.basket)\r\n   return (\r\n      <Drawer\r\n         anchor=\"right\"\r\n         open={isBasketShow}\r\n         onClose={() => dispatch(setBasketShow(false))}\r\n      >\r\n         <BasketList\r\n            orders={orders}\r\n            totalAmount={totalAmount}\r\n         />\r\n      </Drawer>\r\n   );\r\n}\r\n\r\nexport default Basket;","import React from 'react';\r\nimport './BasketNotice.scss';\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNoticeShow } from '../../store/slices/basketSlice';\r\n\r\nconst BasketNotice = () => {\r\n   const dispatch = useDispatch();\r\n   const { isNoticeShow } = useSelector(state => state.basket);\r\n   return (\r\n      <div>\r\n         <Snackbar\r\n            open={isNoticeShow}\r\n            onClose={() => dispatch(setNoticeShow(false))}\r\n            autoHideDuration={4000}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n         >\r\n            <Alert\r\n               severity=\"info\"\r\n            >\r\n               Товар добавлен в корзину!\r\n            </Alert>\r\n         </Snackbar>\r\n      </div >\r\n   );\r\n}\r\n\r\nexport default BasketNotice;","import React from 'react';\r\nimport { LinearProgress } from '@mui/material';\r\nimport ProductList from '../ProductList/ProductList';\r\nimport ProductsPagination from '../ProductsPagination/ProductsPagination';\r\nimport SearchField from '../SearchField/SearchField';\r\nimport { useSelector } from 'react-redux';\r\nimport Basket from '../Basket/Basket';\r\nimport BasketNotice from '../BasketNotice/BasketNotice';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst Shop = ({ orders, totalAmount }) => {\r\n   const { searchValue } = useSelector(state => state.search);\r\n   const { modifiedProductData, loadingProgress } = useSelector(state => state.productData);\r\n   const location = useLocation();\r\n   return (\r\n      <>\r\n         {\r\n            loadingProgress ? <LinearProgress /> :\r\n               (\r\n                  <>\r\n                     <SearchField />\r\n                     {\r\n                        modifiedProductData.length !== 0 ? <ProductList />\r\n                           : <h3 style={{ textAlign: 'center' }}>Nothing not found</h3>\r\n                     }\r\n                     {\r\n                        searchValue === '' ? <ProductsPagination />\r\n                           : null\r\n                     }\r\n                  </>\r\n               )\r\n         }\r\n         {\r\n            location.pathname === '/' ?\r\n               <>\r\n                  <Basket\r\n                     orders={orders}\r\n                     totalAmount={totalAmount}\r\n                  />\r\n                  <BasketNotice />\r\n               </>\r\n               : null\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Shop;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Container } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport { Route, Routes } from 'react-router';\nimport './App.scss';\nimport Checkout from './components/Checkout/Checkout';\nimport Header from './components/Header/Header';\nimport Shop from './components/Shop/Shop';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductData } from './store/slices/productDataSlice';\nimport { setOrders, setTotalAmount } from './store/slices/basketSlice';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { orders, totalAmount } = useSelector(state => state.basket)\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    dispatch(fetchProductData());\n  }, [])\n\n  useEffect(() => {\n    const localOrders = JSON.parse(localStorage.getItem('orders'))\n    if (localOrders !== null && localOrders.length > 0) {\n      dispatch(setOrders(localOrders));\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      localStorage.setItem('orders', JSON.stringify(orders))\n    }\n  }, [orders])\n\n  useEffect(() => {\n    dispatch(setTotalAmount(orders.reduce((acc, item) => {\n      return acc + item.finalPrice * item.quantity\n    }, 0)));\n  }, [orders])\n\n  return (\n    <>\n      <Header quantity={orders.length} />\n      <Container sx={{ pt: '120px', pb: '88px' }}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Shop orders={orders} totalAmount={totalAmount} />\n            }\n          />\n          <Route\n            path=\"checkout\"\n            element={<Checkout orders={orders} totalAmount={totalAmount} />}\n          />\n        </Routes>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport basketReducer from \"./slices/basketSlice\";\r\nimport paginationReducer from \"./slices/paginationSlice\";\r\nimport productDataReducer from \"./slices/productDataSlice\";\r\nimport searchReducer from \"./slices/searchSlice\";\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      productData: productDataReducer,\r\n      basket: basketReducer,\r\n      pagination: paginationReducer,\r\n      search: searchReducer,\r\n   }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}